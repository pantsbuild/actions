name: Install Pyenv Python
description: Install and activate an interpreter via Pyenv.
inputs:
  python-version:
    description: The version of Python to install.
    required: true
  pyenv-version:
    description: The version of Pyenv to use. Should be a tag or branch name.
    required: false
    default: v2.3.21
outputs:
  venv-dir:
    description: The absolute path of the virtual environment directory created by this action.
    value: ${{ steps.create-venv.outputs.venv-dir }}
runs:
  using: composite
  steps:
    - name: Cache Pyenv
      uses: actions/cache@v4
      with:
        path: ${{ runner.tool_cache }}/pyenv_root
        key: ${{ matrix.os }}-${{ runner.arch }}-install-pyenv-${{ inputs.pyenv-version }}-${{ inputs.python-version }}-v1
    - name: Install Pyenv
      shell: bash
      run: |
        PYENV_ROOT="${{ runner.tool_cache }}/pyenv_root"
        if [[ -d "${PYENV_ROOT}" ]]; then
          echo "Using cached ${PYENV_ROOT}"
        else
          git clone --depth 1 --branch "${{ inputs.pyenv-version }}" https://github.com/pyenv/pyenv "${PYENV_ROOT}"
        fi

        echo "PYENV_ROOT=${PYENV_ROOT}" >> "$GITHUB_ENV"
        echo "${PYENV_ROOT}/bin" >> $GITHUB_PATH
    - name: Install Python
      shell: bash
      run: |
        version_dir="${PYENV_ROOT}/versions/${{ inputs.python-version }}"
        bin_dir="${version_dir}/bin"
        python="${bin_dir}/python"
        virtualenv_pyz="${version_dir}/virtualenv.pyz"

        if [[ -x "${python}" && -f "${virtualenv_pyz}" ]]; then
          echo "Using cached ${python}"
        else
          rm -rf "${version_dir}"
          pyenv install ${{ inputs.python-version }}

          virtualenv_url="$("${python}" "${{ github.action_path }}/determine-virtualenv-url.py")"
          curl -fL "${virtualenv_url}" > "${version_dir}/virtualenv.pyz"
          echo "Using ${virtualenv_url} to create virtualenvs"
        fi

        echo "${bin_dir}" >> $GITHUB_PATH
        echo "__VIRTUALENV_PYZ__=${virtualenv_pyz}" >> "$GITHUB_ENV"
    - name: Create Venv
      id: create-venv
      shell: bash
      run: |
        venv="$(mktemp -d)"
        echo "Setting up venv for $(python -V 2>&1) using $(which python) at ${venv}"
        python "${__VIRTUALENV_PYZ__}" "${venv}"
        echo "${venv}/bin" >> $GITHUB_PATH
        echo "venv-dir=${venv}" >> $GITHUB_OUTPUT
