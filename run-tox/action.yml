name: Run Tox
description: Sets up tox and runs a tox environment.
inputs:
  python:
    description: A custom python to use for installing tox.
    required: false
    default: python
  tox-env:
    description: The tox environment to execute.
    required: true
runs:
  using: composite
  steps:
    - name: Calculate Tox Version
      id: calculate-tox-version
      run: |
        from __future__ import print_function

        import os

        try:
            from ConfigParser import ConfigParser
        except ImportError:
            from configparser import ConfigParser

        cp = ConfigParser()
        cp.read("tox.ini")
        tox_min_version = cp.get("tox", "minversion")
        with open(os.environ["GITHUB_OUTPUT"], "a") as gh_output_fp:
            print("tox-min-version={}".format(tox_min_version), file=gh_output_fp)
      shell: python
    - name: Install Tox
      run: |
        ${{ inputs.python }} -mpip install -U pip
        ${{ inputs.python }} -mpip install 'tox==${{ steps.calculate-tox-version.outputs.tox-min-version }}'
      shell: bash
    - name: Execute tox -e ${{ inputs.tox-env }}
      run: |
        if [[ "$(uname -s)" == "Darwin" ]]; then
          # Needed for Pillow to build successfully:
          #   https://github.com/python-pillow/Pillow/issues/3438#issuecomment-543812237
          export CPATH="$(xcrun --show-sdk-path)/usr/include"

          if [[ "$(uname -m)" == "x86_64" ]]; then
            # Works around bad `-arch arm64` flag embedded in Xcode 12.x Python interpreters on
            # intel machines. See: https://github.com/giampaolo/psutil/issues/1832
            export ARCHFLAGS="-arch x86_64"
          fi
        fi
        ${{ inputs.python }} -mtox --skip-missing-interpreters=false -v -e ${{ inputs.tox-env }}
      shell: bash
